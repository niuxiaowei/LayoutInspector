
plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
}

apply plugin: 'ReplaceMethodPlugin'


android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.example.layoutinspector"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    signingConfigs {
        myConfig {
            storeFile file("key.jks")
            storePassword "replace"
            keyAlias "key0"
            keyPassword "replace"
            v2SigningEnabled true
        }
    }

    buildTypes {
        debug{
            minifyEnabled false

        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.myConfig
        }
    }
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    println("rootdir:${rootDir}")
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'org.jetbrains:annotations:15.0'
    releaseImplementation project(path: ':layoutinspector-no-op')
    debugImplementation project(path: ':layoutinspector')
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'

    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.3.72"
    implementation 'androidx.annotation:annotation:1.0.0'
    //noinspection GradleCompatible
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

//    debugImplementation 'com.github.niuxiaowei.LayoutInspector:layoutinspector:2.0.2'
//    releaseImplementation 'com.github.niuxiaowei.LayoutInspector:layoutinspector-no-op:2.0.2'
}

replaceMethod {
    open = true //这里如果设置为false,则会关闭插桩
    openLog false
    replaceByMethods {
        //对inflate方法进行替换，用来显示view的layout被inflate的位置信息
        register {
            replace {
                invokeType "ins"
                className "android.view.LayoutInflater"
                methodName "inflate"
                desc "(int,android.view.ViewGroup)android.view.View"
            }
            by {
                className = "com.mi.layoutinspector.replacemethod.LayoutInflaterProxy"
                addExtraParams = true
            }
        }

        register {
            replace {
                invokeType "static"
                className "android.view.View"
                methodName "inflate"
                desc "(android.content.Context,int,android.view.ViewGroup)android.view.View"
                ignoreOverideStaticMethod true
            }
            by {
                className = "com.mi.layoutinspector.replacemethod.LayoutInflaterProxy"
                addExtraParams  true
            }
        }

        register {
            replace {
                invokeType "ins"
                className "android.view.LayoutInflater"
                methodName "inflate"
                desc "(int,android.view.ViewGroup,boolean)android.view.View"
            }
            by {
                className = "com.mi.layoutinspector.replacemethod.LayoutInflaterProxy"
                addExtraParams =  true
            }
        }

        //若想对dialog进行检测，需要添加下面配置
        register {
            replace {
                invokeType "ins"
                className "android.app.Dialog"
                methodName "show"
            }
            by {
                className = "com.mi.layoutinspector.replacemethod.DialogProxy"
            }
        }

        //若想对PopupWindow进行检测，需要添加下面配置
        register {
            replace {
                invokeType "ins"
                className "android.widget.PopupWindow"
                methodName "showAsDropDown"
                desc "(android.view.View)"
            }
            by {
                className = "com.mi.layoutinspector.replacemethod.PopupWindowProxy"
            }
        }

        register {
            replace {
                invokeType "ins"
                className "android.widget.PopupWindow"
                methodName "showAsDropDown"
                desc "(android.view.View,int,int)"
            }
            by {
                className = "com.mi.layoutinspector.replacemethod.PopupWindowProxy"
            }
        }

        register {
            replace {
                invokeType "ins"
                className "android.widget.PopupWindow"
                methodName "showAsDropDown"
                desc "(android.view.View,int,int,int)"
            }
            by {
                className = "com.mi.layoutinspector.replacemethod.PopupWindowProxy"
            }
        }

        register {
            replace {
                invokeType "ins"
                className "android.widget.PopupWindow"
                methodName "showAtLocation"
                desc "(android.view.View,int,int,int)"
            }
            by {
                className = "com.mi.layoutinspector.replacemethod.PopupWindowProxy"
            }
        }

        //对setOnClickListener方法进行替换，在view检测器中显示click的位置信息
        register {
            replace {
                invokeType "ins"
                className "android.view.View"
                methodName "setOnClickListener"
                desc "(android.view.View\$OnClickListener)"
            }
            by {
                className = "com.mi.layoutinspector.replacemethod.OnClickListenerProxy"
                addExtraParams =  true
            }
        }

        //对setOnLongClickListener方法进行替换，在view检测器中显示click的位置信息
        register {
            replace {
                invokeType "ins"
                className "android.view.View"
                methodName "setOnLongClickListener"
                desc "(android.view.View\$OnLongClickListener)"
            }
            by {
                className = "com.mi.layoutinspector.replacemethod.OnClickListenerProxy"
                addExtraParams =  true
            }
        }

        //ImageView相关操作
        register {
            replace {
                invokeType "ins"
                className "android.widget.ImageView"
                methodName "setImageResource"
                desc "(int)"
            }
            by {
                className = "com.mi.layoutinspector.replacemethod.ImageViewProxy"
                addExtraParams =  true
            }
        }

    }
}